{
  "version": 3,
  "sources": ["src/js/utils/index.js", "src/js/abit-view.js"],
  "sourcesContent": ["export function createElement(html) {\n  const elem = document.createElement('div');\n  elem.insertAdjacentHTML('afterbegin', html);\n  return elem.firstElementChild;\n}\n\nexport function createElementFromTemplate(tmplElem) {\n  const elem = document.createElement('div');\n  elem.append(tmplElem.content.cloneNode(true));\n  return elem.firstElementChild;\n}\n\nexport function getFormData(formElem) {\n  const formData = new FormData(formElem);\n  const data = {};\n  for (const [fkey, value] of formData.entries()) {\n    const key = kebabToCamel(fkey);\n    data[key] = value;\n  }\n  return data;\n\n  // FIXME \u0434\u043E\u0434\u0435\u043B\u0430\u0442\u044C \u0434\u043B\u044F \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 key\n}\n\nexport function setFormData(formElem, data) {\n  for (const [key, value] of Object.entries(data)) {\n    if (typeof value === 'string') {\n      const name = camelToKebab(key);\n      const elem = formElem.elements[name];\n      if (!elem) continue;\n\n      elem.value = value;\n      continue;\n    }\n\n    if (typeof value === 'number') {\n      continue;\n    }\n\n    // FIXME \u0434\u043E\u0434\u0435\u043B\u0430\u0442\u044C \u0434\u043B\u044F \u0440\u0430\u0437\u043D\u044B\u0445 \u0442\u0438\u043F\u043E\u0432\n  }\n}\n\n// https://stackoverflow.com/questions/63116039/camelcase-to-kebab-case\nexport function camelToKebab(str) {\n  return str\n    .split('')\n    .map((letter, idx) => {\n      return letter.toUpperCase() === letter\n        ? `${idx !== 0 ? '-' : ''}${letter.toLowerCase()}`\n        : letter;\n    })\n    .join('');\n}\n\n// https://stackoverflow.com/questions/57556471/convert-kebab-case-to-camelcase-with-javascript\nexport function kebabToCamel(str) {\n  return str.replace(/-./g, (x) => x[1].toUpperCase());\n}\n", "import {createElementFromTemplate, kebabToCamel} from './utils/index.js';\n\nexport function createAbitViewElemFromTemplate(tmplElem, data) {\n  const abitViewElem = createElementFromTemplate(tmplElem);\n\n  for (const elem of abitViewElem.querySelectorAll(`[name]`)) {\n    const key = kebabToCamel(elem.getAttribute('name'));\n    elem.textContent = data[key] ?? '';\n  }\n\n  const idElem = abitViewElem;\n  const id = data.id ?? data._id;\n  if (idElem && id) idElem.dataset.id = id;\n\n  const genderElem = abitViewElem.querySelector('.abit-view__gender');\n  genderElem.textContent = data.gender === '\u043C' ? '\u2642\uFE0F' : '\u2640\uFE0F';\n\n  const needDormElem = abitViewElem.querySelector('.abit-view__need-dorm');\n  switch (Number(data.needDorm)) {\n    case 0:\n      needDormElem.textContent = '';\n      break;\n    case 1:\n      needDormElem.innerHTML = '<span class=\"emoji\">\uD83C\uDFE8</span>';\n      needDormElem.style.fontSize = '0.5em';\n      break;\n    case 2:\n      needDormElem.innerHTML = '<span class=\"emoji\">\uD83C\uDFE8</span>';\n      needDormElem.style.fontSize = '1em';\n      break;\n    default:\n      needDormElem.textContent = '<?>';\n  }\n\n  const applicationsListElem = abitViewElem.querySelector(\n    '.abit-view__applications-list'\n  );\n\n  applicationsListElem.replaceChildren();\n\n  data.applications.forEach((app) => {\n    const elem = document.createElement('span');\n    elem.innerHTML = `${app.eduProg}<span class=\"abit-view__application-grade\">${app.grade}<span>`;\n    elem.classList.add('abit-view__application');\n\n    elem.setAttribute('title', app.grade);\n\n    if (app.priority) elem.classList.add('abit-view__application--priority');\n    if (app.disabled) elem.classList.add('abit-view__application--disabled');\n\n    if (app.priority) {\n      applicationsListElem.append(elem);\n    } else {\n      applicationsListElem.prepend(elem);\n    }\n  });\n\n  // scores\n  const scoreListElem = abitViewElem.querySelector('.abit-view__score-list');\n\n  const certScore = parseFloat(\n    (data.certScore || 0).toString().replace(',', '.')\n  );\n  const extraScore = parseFloat(\n    (data.extraScore || 0).toString().replace(',', '.')\n  );\n  const totalScore = certScore + extraScore;\n\n  scoreListElem.replaceChildren();\n\n  if (totalScore === 0) return;\n\n  if (extraScore > 0 && certScore > 0) {\n    {\n      const elem = document.createElement('span');\n      elem.classList.add('abit-view__cert-score');\n      elem.textContent = certScore.toString().replace('.', ',');\n      scoreListElem.append(elem);\n    }\n    {\n      const elem = document.createElement('span');\n      elem.classList.add('abit-view__extra-score');\n      elem.textContent = extraScore.toString().replace('.', ',');\n      scoreListElem.append('+', elem, '=');\n    }\n  }\n\n  if (totalScore > 0) {\n    const elem = document.createElement('span');\n    elem.classList.add('abit-view__total-score');\n    elem.textContent = parseFloat(totalScore.toFixed(2))\n      .toString()\n      .replace('.', ',');\n    scoreListElem.append(elem);\n  }\n\n  // --------------------\n  const hasMedicalCert = abitViewElem.querySelector(\n    '.abit-view__has-medical-cert span'\n  );\n  const hasFluoro = abitViewElem.querySelector('.abit-view__has-fluoro span');\n  const hasVaccine = abitViewElem.querySelector('.abit-view__has-vaccine span');\n  const hasEduCertOriginal = abitViewElem.querySelector(\n    '.abit-view__has-edu-cert-original span'\n  );\n\n  if (!data.hasMedicalCert) hasMedicalCert.classList.add('not-visible');\n  if (!data.hasFluoro) hasFluoro.classList.add('not-visible');\n  if (!data.hasVaccine) hasVaccine.classList.add('not-visible');\n  if (!data.hasEduCertOriginal) hasEduCertOriginal.classList.add('not-visible');\n\n  return abitViewElem;\n}\n"],
  "mappings": "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",
  "names": []
}
