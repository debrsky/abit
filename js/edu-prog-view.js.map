{
  "version": 3,
  "sources": ["src/js/utils/index.js", "src/js/edu-prog-view.js"],
  "sourcesContent": ["export function createElement(html) {\n  const elem = document.createElement('div');\n  elem.insertAdjacentHTML('afterbegin', html);\n  return elem.firstElementChild;\n}\n\nexport function createElementFromTemplate(tmplElem) {\n  const elem = document.createElement('div');\n  elem.append(tmplElem.content.cloneNode(true));\n  return elem.firstElementChild;\n}\n\nexport function getFormData(formElem) {\n  const formData = new FormData(formElem);\n  const data = {};\n  for (const [fkey, value] of formData.entries()) {\n    const key = kebabToCamel(fkey);\n    data[key] = value;\n  }\n  return data;\n\n  // FIXME \u0434\u043E\u0434\u0435\u043B\u0430\u0442\u044C \u0434\u043B\u044F \u043C\u0430\u0441\u0441\u0438\u0432\u043E\u0432 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 key\n}\n\nexport function setFormData(formElem, data) {\n  for (const [key, value] of Object.entries(data)) {\n    if (typeof value === 'string') {\n      const name = camelToKebab(key);\n      const elem = formElem.elements[name];\n      if (!elem) continue;\n\n      elem.value = value;\n      continue;\n    }\n\n    if (typeof value === 'number') {\n      continue;\n    }\n\n    // FIXME \u0434\u043E\u0434\u0435\u043B\u0430\u0442\u044C \u0434\u043B\u044F \u0440\u0430\u0437\u043D\u044B\u0445 \u0442\u0438\u043F\u043E\u0432\n  }\n}\n\n// https://stackoverflow.com/questions/63116039/camelcase-to-kebab-case\nexport function camelToKebab(str) {\n  return str\n    .split('')\n    .map((letter, idx) => {\n      return letter.toUpperCase() === letter\n        ? `${idx !== 0 ? '-' : ''}${letter.toLowerCase()}`\n        : letter;\n    })\n    .join('');\n}\n\n// https://stackoverflow.com/questions/57556471/convert-kebab-case-to-camelcase-with-javascript\nexport function kebabToCamel(str) {\n  return str.replace(/-./g, (x) => x[1].toUpperCase());\n}\n", "import {createElementFromTemplate, kebabToCamel} from './utils/index.js';\n\nexport function createEduProgViewElemFromTemplate(tmplElem, data) {\n  const eduProgViewElem = createElementFromTemplate(tmplElem);\n\n  for (const elem of eduProgViewElem.querySelectorAll(`[name]`)) {\n    const key = kebabToCamel(elem.getAttribute('name'));\n    if (data[key]) elem.textContent = data[key];\n  }\n\n  const idElem = eduProgViewElem;\n  const id = data.id ?? data._id;\n  if (idElem && id) idElem.dataset.id = id;\n\n  return eduProgViewElem;\n}\n"],
  "mappings": ";;AAMO,qCAAmC,UAAU;AAClD,UAAM,OAAO,SAAS,cAAc,KAAK;AACzC,SAAK,OAAO,SAAS,QAAQ,UAAU,IAAI,CAAC;AAC5C,WAAO,KAAK;AAAA,EACd;AA8CO,wBAAsB,KAAK;AAChC,WAAO,IAAI,QAAQ,OAAO,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC;AAAA,EACrD;;;ACxDO,6CAA2C,UAAU,MAAM;AAChE,UAAM,kBAAkB,0BAA0B,QAAQ;AAE1D,eAAW,QAAQ,gBAAgB,iBAAiB,QAAQ,GAAG;AAC7D,YAAM,MAAM,aAAa,KAAK,aAAa,MAAM,CAAC;AAClD,UAAI,KAAK;AAAM,aAAK,cAAc,KAAK;AAAA,IACzC;AAEA,UAAM,SAAS;AACf,UAAM,KAAK,KAAK,MAAM,KAAK;AAC3B,QAAI,UAAU;AAAI,aAAO,QAAQ,KAAK;AAEtC,WAAO;AAAA,EACT;",
  "names": []
}
